// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mikencoderx.Context;
using AppContext = Mikencoderx.Context.AppContext;

#nullable disable

namespace Mikencoderx.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20221127014333_example")]
    partial class example
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Mikencoderx.Models.Clientes", b =>
                {
                    b.Property<int>("PkCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkCliente"), 1L, 1);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Mikencoderx.Models.Lista_PL", b =>
                {
                    b.Property<int>("pkLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pkLista"), 1L, 1);

                    b.Property<int>("FkProgramadores")
                        .HasColumnType("int");

                    b.Property<int>("FkTecnologiass")
                        .HasColumnType("int");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.HasKey("pkLista");

                    b.HasIndex("FkProgramadores");

                    b.HasIndex("FkTecnologiass");

                    b.ToTable("Lista_PL");
                });

            modelBuilder.Entity("Mikencoderx.Models.Membresias", b =>
                {
                    b.Property<int>("PkMembresias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkMembresias"), 1L, 1);

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkClientes")
                        .HasColumnType("int");

                    b.Property<int>("FkPlanes")
                        .HasColumnType("int");

                    b.Property<int>("FkProyecto")
                        .HasColumnType("int");

                    b.HasKey("PkMembresias");

                    b.HasIndex("FkClientes");

                    b.HasIndex("FkPlanes");

                    b.HasIndex("FkProyecto");

                    b.ToTable("Membresias");
                });

            modelBuilder.Entity("Mikencoderx.Models.Planes", b =>
                {
                    b.Property<int>("PkPlanes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkPlanes"), 1L, 1);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dias")
                        .HasColumnType("int");

                    b.HasKey("PkPlanes");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Mikencoderx.Models.Programadores", b =>
                {
                    b.Property<int>("PkPrgramadores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkPrgramadores"), 1L, 1);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descrpcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkPrgramadores");

                    b.ToTable("Programadores");
                });

            modelBuilder.Entity("Mikencoderx.Models.Proyectos", b =>
                {
                    b.Property<int>("PkProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkProyecto"), 1L, 1);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("FkProgramadores")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLMaster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLWeb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkProyecto");

                    b.HasIndex("FkProgramadores");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("Mikencoderx.Models.Registros", b =>
                {
                    b.Property<int>("PkRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkRegistro"), 1L, 1);

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkUsuarios")
                        .HasColumnType("int");

                    b.HasKey("PkRegistro");

                    b.HasIndex("FkUsuarios");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("Mikencoderx.Models.Roles", b =>
                {
                    b.Property<int>("PkRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkRol"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Mikencoderx.Models.Tecnologias", b =>
                {
                    b.Property<int>("PkTecnologias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkTecnologias"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkTecnologias");

                    b.ToTable("Tecnologias");
                });

            modelBuilder.Entity("Mikencoderx.Models.Usuarios", b =>
                {
                    b.Property<int>("PkUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkUsuario"), 1L, 1);

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FkRoles")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkUsuario");

                    b.HasIndex("FkRoles");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Mikencoderx.Models.Lista_PL", b =>
                {
                    b.HasOne("Mikencoderx.Models.Programadores", "Programadores")
                        .WithMany()
                        .HasForeignKey("FkProgramadores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mikencoderx.Models.Tecnologias", "Tecnologias")
                        .WithMany()
                        .HasForeignKey("FkTecnologiass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programadores");

                    b.Navigation("Tecnologias");
                });

            modelBuilder.Entity("Mikencoderx.Models.Membresias", b =>
                {
                    b.HasOne("Mikencoderx.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("FkClientes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mikencoderx.Models.Planes", "Planes")
                        .WithMany()
                        .HasForeignKey("FkPlanes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mikencoderx.Models.Proyectos", "Proyectos")
                        .WithMany()
                        .HasForeignKey("FkProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Planes");

                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("Mikencoderx.Models.Proyectos", b =>
                {
                    b.HasOne("Mikencoderx.Models.Programadores", "Programadores")
                        .WithMany()
                        .HasForeignKey("FkProgramadores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programadores");
                });

            modelBuilder.Entity("Mikencoderx.Models.Registros", b =>
                {
                    b.HasOne("Mikencoderx.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("FkUsuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Mikencoderx.Models.Usuarios", b =>
                {
                    b.HasOne("Mikencoderx.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRoles")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
